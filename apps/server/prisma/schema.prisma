// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

enum RoleType {
  OWNER @map("OWNER")
  ADMIN @map("ADMIN")
  USER  @map("USER")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  phone    String   @unique
  roleName RoleType
  password String

  name   String?
  avatar String?

  // 用户角色关系
  userRoles UserRole[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          String   @id @default(uuid())
  name        RoleType @unique
  description String?

  // 角色用户关系
  userRoles       UserRole[]
  // 角色权限关系
  rolePermissions RolePermission[]

  createdAt DateTime @default(now())
}

enum PermissionType {
  CATALOGUE @map("0")
  MENU      @map("1")
  BUTTON    @map("2")
}

// 用户权限路由
model UserPermissionRoutes {
  id         String         @id @default(uuid())
  name       String
  label      String
  type       PermissionType
  route      String         @unique
  order      Int?
  icon       String?
  component  String?
  hideInMenu Boolean?       @default(false)
  hide       Boolean?       @default(false)
  roleName   RoleType[]

  // 父子关系
  parentId String?
  parent   UserPermissionRoutes?  @relation("RouteHierarchy", fields: [parentId], references: [id])
  children UserPermissionRoutes[] @relation("RouteHierarchy")

  // 角色权限关系
  rolePermissions RolePermission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 用户角色中间表
model UserRole {
  id     String @id @default(uuid())
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([userId, roleId])
}

// 角色权限中间表
model RolePermission {
  id           String @id @default(uuid())
  roleId       String
  permissionId String

  role       Role                 @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission UserPermissionRoutes @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([roleId, permissionId])
}

// 用户埋点记录
model UserEvent {
  id        String @id @default(uuid())
  userId    String
  userName  String
  eventType String // 事件类型：page_view, button_click, api_request, page_leave, etc.
  eventData Json? // 事件详细数据

  // 页面相关信息
  pagePath  String? // 页面路径
  pageTitle String? // 页面标题
  duration  Int? // 停留时间（毫秒）

  // 用户交互信息
  elementId   String? // 点击元素ID
  elementType String? // 元素类型：button, link, input, etc.
  elementText String? // 元素文本内容

  // 请求相关信息
  apiUrl       String? // API 请求地址
  httpMethod   String? // HTTP 方法
  responseTime Int? // 响应时间（毫秒）
  statusCode   Int? // 响应状态码

  // 设备和环境信息
  userAgent        String? // 用户代理字符串
  platform         String? // 操作系统平台
  browser          String? // 浏览器名称
  browserVersion   String? // 浏览器版本
  screenResolution String? // 屏幕分辨率
  language         String? // 浏览器语言
  timezone         String? // 时区

  // IP 和地理位置信息
  ipAddress String? // IP 地址
  country   String? // 国家
  region    String? // 地区
  city      String? // 城市

  // 会话信息
  sessionId String? // 会话ID
  referrer  String? // 来源页面

  // 错误信息（如果是错误事件）
  errorMessage String? // 错误消息
  errorStack   String? // 错误堆栈

  // 自定义标签和属性
  tags       String[] // 自定义标签
  customData Json? // 自定义数据

  createdAt DateTime @default(now())

  // 添加索引以提高查询性能
  @@index([userId, createdAt])
  @@index([eventType, createdAt])
  @@index([pagePath, createdAt])
  @@index([sessionId, createdAt])
}

// 岗位信息表
model JobInfo {
  id             String   @id @default(uuid())
  jobName        String // 岗位名称
  salaryDesc     String // 薪资描述
  jobLabels      String[] // 岗位标签
  jobValidStatus Int // 岗位有效状态
  iconWord       String? // 图标文字
  skills         String[] // 技能要求
  jobDegree      String? // 学历要求
  cityName       String? // 城市名称
  brandName      String // 公司名称
  brandIndustry  String? // 公司行业
  brandScaleName String? // 公司规模
  welfareList    String[] // 福利列表

  // 元数据
  source   String? // 数据来源
  dataDate String? // 数据日期
  isActive Boolean @default(true) // 是否启用

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 添加索引以提高查询性能
  @@index([brandName, createdAt])
  @@index([jobName, createdAt])
  @@index([cityName, createdAt])
  @@index([brandIndustry, createdAt])
  @@index([isActive, createdAt])
}
